--Add new account
INSERT INTO public.account (
        account_firstname,
        account_lastname,
        account_email,
        account_password
    )
VALUES (
        'Tony',
        'Stark',
        'tony@starkent.com',
        'Iam1ronM@n'
    ) --Modify account_type
UPDATE account
SET account_type = 'admin'
WHERE account_id = 1 -- delete account
DELETE FROM account
WHERE account_lastname = 'Stark' --Modify Hummer description
UPDATE inventory
SET inv_description = REPLACE(
        inv_description,
        'the small interiors',
        'a huge interior'
    ) -- inner join 
SELECT inv_make,
    inv_model,
    classification_name
FROM inventory
WHERE inv_id = 10
    INNER JOIN classification ON inventory.classification_id = classification.classification_id
WHERE inventory.classification_id = 2 -- Correct image address
UPDATE inventory
SET inv_image = REPLACE(inv_image, '/images/', '/images/vehicles/') --Table for favorite
    CREATE TABLE public.favorite(
        fav_id FOREIGN KEY (fav_id),
        fav_list integer NOT NULL GENERATED BY DEFAULT [],
        CONSTRAINT fav_pkey PRIMARY KEY (fav_id) REFERENCES account(fav_id)
    )
ALTER TABLE account
ADD fav_id SERIAL UNIQUE
ALTER TABLE IF EXISTS public.account
ADD CONSTRAINT fk_favorite FOREIGN KEY (fav_id) REFERENCES public.favorite (fav_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE NO ACTION --ADD WITH ARRAY
INSERT INTO favorite (fav_list)
VALUES (ARRAY [1,2,3]) --add to the array
UPDATE favorite
SET fav_list = ARRAY_APPEND(fav_list, 100)
    /*This is to set up a fav list table to 
     CREATE TABLE public.test(
     fav_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
     fav_list integer [],
     FOREIGN KEY (fav_id)
     REFERENCES account(account_id)
     )